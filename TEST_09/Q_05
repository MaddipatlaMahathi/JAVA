import java.util.HashSet;
import java.util.Set;
public class WordBreak {

    public static boolean wordBreak(String s, Set<String> wordDict) {
        return wordBreakHelper(s, wordDict, 0);
    }
    private static boolean wordBreakHelper(String s, Set<String> wordDict, int start) {
        if (start == s.length()) {
            return true;
        }
        for (int end = start + 1; end <= s.length(); end++) {
            String substring = s.substring(start, end);
            if (wordDict.contains(substring)) {
                if (wordBreakHelper(s, wordDict, end)) {
                    return true;
                }
            }
        }
        return false;
    }

    public static void main(String[] args) {
        Set<String> wordDict1 = new HashSet<>(Set.of("apple", "pen", "applepen", "pine", "pineapple"));
        Set<String> wordDict2 = new HashSet<>(Set.of("cats", "dog", "sand", "and", "cat"));
        System.out.println(wordBreak("pineapplepenapple", wordDict1));
        System.out.println(wordBreak("catsandog", wordDict1)); 
        System.out.println(wordBreak("catsanddog", wordDict2));
        System.out.println(wordBreak("catsandog", wordDict2));
    }
}
